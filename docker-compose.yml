version: '3.8'

services:
  # === Laravel (PHP-FPM) ==========================================
  laravel-backend:
    build:
      context: ./docker/laravel-backend
      dockerfile: Dockerfile
    container_name: laravel-backend
    # Source mount (for hot reload)
    volumes:
      - ./laravel-backend:/var/www/html
    depends_on:
      - db
    env_file: 
      - ./laravel-backend/.env
    # Port not needed from Laravel(PHP-FPM) as nginx handles it
    healthcheck:
      test: ["CMD", "php", "artisan", "health:check"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend-network

  # === Nginx (Reverse Proxy) =====================================
  nginx:
    image: nginx:stable
    container_name: nginx
    volumes:
      - ./laravel-backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:8000"
    depends_on:
      - laravel-backend
    networks:
      - backend-network

  # === MySQL ====================================================
  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend-network

  # === Next.js ==================================================
  next-frontend:
    build:
      context: ./docker/next-frontend
      dockerfile: Dockerfile
    container_name: next-frontend
    volumes:
      - ./next-frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - laravel-backend
    environment:
      # URL to call Laravel API (development environment example: http://localhost/api)
      # Expected to be used when fetching from frontend
      NEXT_PUBLIC_API_URL: "http://localhost/api"
    networks:
      - backend-network

volumes:
  db_data:

networks:
  backend-network:
    driver: bridge